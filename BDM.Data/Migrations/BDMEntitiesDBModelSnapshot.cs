// <auto-generated />
using System;
using BDM.Data.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BDM.Data.Migrations
{
    [DbContext(typeof(BDMEntitiesDB))]
    partial class BDMEntitiesDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BDM.Data.Model.Broker", b =>
                {
                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<string>("NPN")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("SSN")
                        .HasColumnType("text");

                    b.Property<string>("Suffix")
                        .HasColumnType("text");

                    b.HasKey("ClientName", "NPN");

                    b.ToTable("Brokers");
                });

            modelBuilder.Entity("BDM.Data.Model.Client", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("BDM.Data.Model.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("text");

                    b.Property<int>("EmailAddressType")
                        .HasColumnType("integer");

                    b.Property<string>("ParentClientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentNPN")
                        .HasColumnType("text");

                    b.Property<string>("ParentNPN1")
                        .IsRequired()
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("ClientName");

                    b.HasIndex("ParentClientName", "ParentNPN1");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("BDM.Data.Model.Broker", b =>
                {
                    b.HasOne("BDM.Data.Model.Client", "Client")
                        .WithMany("Brokers")
                        .HasForeignKey("ClientName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BDM.Data.Model.Email", b =>
                {
                    b.HasOne("BDM.Data.Model.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDM.Data.Model.Broker", "Parent")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("ParentClientName", "ParentNPN1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
